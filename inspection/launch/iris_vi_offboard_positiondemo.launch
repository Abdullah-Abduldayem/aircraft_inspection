<?xml version="1.0" ?>
<launch>
  
<arg name="ns" default="iris"/>
  <arg name="rviz"                    default="true" />
  <arg name="rtabmapviz"              default="false" /> 
<!-- Odometry parameters: -->
  <arg name="strategy"            default="1" />       <!-- Strategy: 0=BOW (bag-of-words) 1=Optical Flow -->
  <arg name="feature"             default="6" />       <!-- Feature type: 0=SURF 1=SIFT 2=ORB 3=FAST/FREAK 4=FAST/BRIEF 5=GFTT/FREAK 6=GFTT/BRIEF 7=BRISK -->
  <arg name="nn"                  default="3" />       <!-- Nearest neighbor strategy : 0=Linear, 1=FLANN_KDTREE (SIFT, SURF), 2=FLANN_LSH, 3=BRUTEFORCE (ORB/FREAK/BRIEF/BRISK) -->
  <arg name="max_depth"           default="4.5" />     <!-- Maximum features depth (m) -->
  <arg name="min_inliers"         default="15" />      <!-- Minimum visual correspondences to accept a transformation (m) -->
  <arg name="inlier_distance"     default="0.02" />    <!-- RANSAC maximum inliers distance (m) -->
  <arg name="local_map"           default="1000" />    <!-- Local map size: number of unique features to keep track -->
  <arg name="odom_info_data"      default="true" />    <!-- Fill odometry info messages with inliers/outliers data. -->
  <arg name="time_threshold"          default="0"/>             <!-- (ms) If not 0 ms, memory management is used to keep processing time on this fixed limit. -->
  <arg name="optimize_from_last_node" default="true"/>         <!-- Optimize the map from the last node. Should be true on multi-session mapping and when time threshold is set -->

<include file="$(find rotors_gazebo)/launch/gazebo_iris_aircraft_world.launch">
	<arg name="ns" value="$(arg ns)"/>
</include>
<include file="$(find px4)/launch/mavros_sitl.launch">
	<arg name="ns" value="$(arg ns)"/>
</include>
<group ns="$(arg ns)">
	<node pkg="aircraft_inspection" name="demo_offboard_position_control" type="demo_offboard_position_control" output="screen"/>
<!--	<node pkg="px4" name="demo_offboard_attitude_setpoints" type="demo_offboard_attitude_setpoints" output="screen"/>-->
<!--	<node pkg="px4" name="demo_offboard_velocity_test" type="demo_offboard_velocity_test" output="screen"/>-->
  
</group>
<group ns="$(arg ns)">
   <node pkg="rtabmap_ros" type="rgbd_odometry" name="rgbd_odometry" output="screen">
      <remap from="rgb/image"       to="/iris/xtion_sensor/iris/xtion_sensor_camera/rgb/image_raw"/>
      <remap from="depth/image"     to="/iris/xtion_sensor/iris/xtion_sensor_camera/depth/image_raw"/>
      <remap from="rgb/camera_info" to="/iris/xtion_sensor/iris/xtion_sensor_camera/rgb/camera_info"/>
	  
	  <param name="frame_id"                 type="string" value="iris/xtion_sensor/camera_depth_optical_frame"/>
	  <param name="wait_for_transform"       type="bool"   value="true"/>
	  
	  <param name="Odom/Strategy"            type="string" value="$(arg strategy)"/> 
	  <param name="Odom/FeatureType"         type="string" value="$(arg feature)"/>  
	  <param name="OdomBow/NNType"           type="string" value="$(arg nn)"/>
	  <param name="Odom/MaxDepth"            type="string" value="$(arg max_depth)"/>  
	  <param name="Odom/MinInliers"          type="string" value="$(arg min_inliers)"/> 
	  <param name="Odom/InlierDistance"      type="string" value="$(arg inlier_distance)"/>       
      <param name="OdomBow/LocalHistorySize" type="string" value="$(arg local_map)"/> 
      <param name="Odom/FillInfoData"        type="string" value="$(arg odom_info_data)"/>   
    </node>
  
  
    <node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" output="screen" args="--delete_db_on_start">
          <param name="frame_id" type="string" value="iris/xtion_sensor/camera_depth_optical_frame"/>

          <param name="subscribe_depth" type="bool" value="true"/>

<!--          <remap from="odom" to="/iris/ground_truth/odometry"/>-->
<!-- instead of odom (it was used in the handheld scenario     -->
	  <param name="frame_id"           type="string" value="iris/xtion_sensor/camera_depth_optical_frame"/>
	  <param name="wait_for_transform" type="bool"   value="true"/>
	  
	  <param name="Rtabmap/TimeThr"           type="string" value="$(arg time_threshold)"/>
	  <param name="RGBD/OptimizeFromGraphEnd" type="string" value="$(arg optimize_from_last_node)"/>
	  <param name="LccBow/MinInliers"         type="string" value="10"/>
	  <param name="LccBow/InlierDistance"     type="string" value="$(arg inlier_distance)"/>
	  
<!-- 	   -->
	  
          <remap from="rgb/image" to="/iris/xtion_sensor/iris/xtion_sensor_camera/rgb/image_raw"/>
          <remap from="depth/image" to="/iris/xtion_sensor/iris/xtion_sensor_camera/depth/image_raw"/>
          <remap from="rgb/camera_info" to="/iris/xtion_sensor/iris/xtion_sensor_camera/rgb/camera_info"/>

          <param name="queue_size" type="int" value="10"/>

          <!-- RTAB-Map's parameters -->
<!--          <param name="RGBD/AngularUpdate" type="string" value="0.01"/>
          <param name="RGBD/LinearUpdate" type="string" value="0.01"/>
          <param name="Rtabmap/TimeThr" type="string" value="700"/>
          <param name="Mem/RehearsalSimilarity" type="string" value="0.45"/>
          <param name="RGBD/OptimizeFromGraphEnd" type="string" value="true"/>-->
    </node>
    
     <node if="$(arg rtabmapviz)" pkg="rtabmap_ros" type="rtabmapviz" name="rtabmapviz" args="-d $(find rtabmap_ros)/launch/config/rgbd_gui.ini" output="screen">
      <param name="subscribe_depth"     type="bool"   value="true"/>
      <param name="subscribe_odom_info" type="bool"   value="$(arg odom_info_data)"/>
      <param name="frame_id"            type="string" value="iris/xtion_sensor/camera_depth_optical_frame"/>
      <param name="wait_for_transform"  type="bool"   value="true"/>
    
      <remap from="rgb/image"       to="/iris/xtion_sensor/iris/xtion_sensor_camera/rgb/image_raw"/>
      <remap from="depth/image"     to="/iris/xtion_sensor/iris/xtion_sensor_camera/depth/image_raw"/>
      <remap from="rgb/camera_info" to="/iris/xtion_sensor/iris/xtion_sensor_camera/rgb/camera_info"/>
    </node>
    
      <!-- Visualization RVIZ -->
  <node if="$(arg rviz)" pkg="rviz" type="rviz" name="rviz" args="-d $(find aircraft_inspection)/rviz/rgbd_gazebo.rviz"/>
  <!-- sync cloud with odometry and voxelize the point cloud (for fast visualization in rviz) -->
  <node if="$(arg rviz)" pkg="nodelet" type="nodelet" name="points_xyzrgb" args="load rtabmap_ros/point_cloud_xyzrgb standalone_nodelet">
    <remap from="rgb/image"       to="/iris/xtion_sensor/iris/xtion_sensor_camera/rgb/image_raw"/>
    <remap from="depth/image"     to="/iris/xtion_sensor/iris/xtion_sensor_camera/depth/image_raw"/>
    <remap from="rgb/camera_info" to="/iris/xtion_sensor/iris/xtion_sensor_camera/rgb/camera_info"/>
    <remap from="cloud"           to="voxel_cloud" />

    <param name="decimation" type="double" value="2"/>
    <param name="voxel_size" type="double" value="0.02"/>
  </node>
  
    
    
  </group>
</launch>
