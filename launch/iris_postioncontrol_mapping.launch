<?xml version="1.0" ?>
<launch>
  
  <arg name="ns" default="iris"/>
  <arg name="rviz"                    default="true" />
  <arg name="rtabmapviz"              default="false" /> 
<!-- Odometry parameters: -->
<!--  <arg name="strategy"            default="1" />  -->     <!-- Strategy: 0=BOW (bag-of-words) 1=Optical Flow -->
 <!-- <arg name="feature"             default="6" />     -->  <!-- Feature type: 0=SURF 1=SIFT 2=ORB 3=FAST/FREAK 4=FAST/BRIEF 5=GFTT/FREAK 6=GFTT/BRIEF 7=BRISK -->
 <!-- <arg name="nn"                  default="3" />   -->    <!-- Nearest neighbor strategy : 0=Linear, 1=FLANN_KDTREE (SIFT, SURF), 2=FLANN_LSH, 3=BRUTEFORCE (ORB/FREAK/BRIEF/BRISK) -->
<!--  <arg name="max_depth"           default="4.5" />-->     <!-- Maximum features depth (m) -->
<!--  <arg name="min_inliers"         default="20" />   -->   <!-- Minimum visual correspondences to accept a transformation (m) -->
 <!-- <arg name="inlier_distance"     default="0.02" />  -->  <!-- RANSAC maximum inliers distance (m) -->
 <!-- <arg name="local_map"           default="1000" /> -->   <!-- Local map size: number of unique features to keep track -->
 <!-- <arg name="odom_info_data"      default="true" /> -->   <!-- Fill odometry info messages with inliers/outliers data. -->
<!--  <arg name="time_threshold"          default="0"/> -->            <!-- (ms) If not 0 ms, memory management is used to keep processing time on this fixed limit. -->
<!--  <arg name="optimize_from_last_node" default="true"/>   -->      <!-- Optimize the map from the last node. Should be true on multi-session mapping and when time threshold is set -->

  
  <arg name="database_path"     default="rtabmap.db"/>
  <arg name="localization"      default="false"/>
  <arg name="rgbd_odometry"     default="false"/>
  <arg name="args"              default="--delete_db_on_start"/>

    
<include file="$(find rotors_gazebo)/launch/gazebo_iris_aircraft_world.launch">
	<arg name="ns" value="$(arg ns)"/>
</include>
<include file="$(find px4)/launch/mavros_sitl.launch">
	<arg name="ns" value="$(arg ns)"/>
</include>
<group ns="$(arg ns)">
	<node pkg="aircraft_inspection" name="demo_offboard_position_control" type="demo_offboard_position_control" output="screen"/>
<!--	<node pkg="px4" name="demo_offboard_attitude_setpoints" type="demo_offboard_attitude_setpoints" output="screen"/>-->
<!--	<node pkg="px4" name="demo_offboard_velocity_test" type="demo_offboard_velocity_test" output="screen"/>-->
  
</group>
<group ns="$(arg ns)">
   <!-- Odometry : ONLY for testing without the actual robot! /odom TF should not be already published. -->
    <node if="$(arg rgbd_odometry)" pkg="rtabmap_ros" type="rgbd_odometry" name="rgbd_odometry" output="screen">
      <param name="frame_id"           type="string" value="iris/xtion_sensor/camera_depth_optical_frame"/>
      <param name="wait_for_transform" type="bool"   value="true"/>
      <param name="Odom/Force2D"       type="string"   value="true"/>
      <remap from="rgb/image"       to="/iris/xtion_sensor/iris/xtion_sensor_camera/rgb/image_raw"/>
      <remap from="depth/image"     to="/iris/xtion_sensor/iris/xtion_sensor_camera/depth/image_raw"/>
      <remap from="rgb/camera_info" to="/iris/xtion_sensor/iris/xtion_sensor_camera/rgb/camera_info"/>
    </node>
    
<!--    /iris/odometry_sensor1/odometry-->
<!-- static transformation  -->
 <node pkg="tf" type="static_transform_publisher" name="link1_broadcaster" args="0 0 0.0 0 0 0 1 /iris/xtion_sensor/ground_truth/iris/xtion_sensor/ground_truth/odometry_sensor_link /iris/xtion_sensor/camera_depth_optical_frame 500" />
<!-- <node pkg="tf" type="static_transform_publisher" name="link2_broadcaster" args="0 0 0.01 0 0 0 1 /iris/ground_truth/iris/ground_truth/odometry_sensorgt_link map 1000" />  -->
<!-- <node pkg="tf" type="static_transform_publisher" name="link2_broadcaster" args="0 0 0.0 0 0 0 1 world map 1000" /> -->
<!-- <node pkg="tf" type="static_transform_publisher" name="link3_broadcaster" args="0 0 15.04 0 0 0 1 map /iris/xtion_sensor/ground_truth/iris/xtion_sensor/ground_truth/odometry_sensor_link 1000" />  -->
<!--  <node pkg="tf" type="static_transform_publisher" name="link4_broadcaster" args="0 0 15.04 0 0 0 1 world /iris/xtion_sensor/camera_depth_optical_frame 1000" />-->
<!--   <node pkg="tf" type="static_transform_publisher" name="link5_broadcaster" args="0 0 15.04 0 0 0 1 map /iris/ground_truth/iris/ground_truth/odometry_sensorgt_link 1000" />
    <node pkg="tf" type="static_transform_publisher" name="link6_broadcaster" args="0 0 15.04 0 0 0 1 map /iris/odometry_sensor1/iris/odometry_sensor1/odometry_sensor1_link 1000" />-->
    
 <node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" output="screen" args="$(arg args)">
	  <param name="database_path"       type="string" value="$(arg database_path)"/>
	  <param name="frame_id"            type="string" value="base_link"/>
	  <param name="odom_frame_id"       type="string" value="world"/>
<!--	  <param name="wait_for_transform"  type="bool"   value="true"/>-->
	  <param name="subscribe_depth"     type="bool"   value="true"/>
<!--	  <param name="subscribe_laserScan" type="bool"   value="true"/>-->
	  <remap from="odom" to="/iris/ground_truth/odometry"/>
	  <!-- inputs -->
<!--	  <remap from="scan" to="/scan"/>-->
	  <remap from="rgb/image"       to="/iris/xtion_sensor/iris/xtion_sensor_camera/rgb/image_raw"/>
  	  <remap from="depth/image"     to="/iris/xtion_sensor/iris/xtion_sensor_camera/depth/image_raw"/>
  	  <remap from="rgb/camera_info" to="/iris/xtion_sensor/iris/xtion_sensor_camera/rgb/camera_info"/>
  	  
 
	
	  <!-- RTAB-Map's parameters: do "rosrun rtabmap rtabmap (double-dash)params" to see the list of available parameters. -->
	  <param name="RGBD/LocalLoopDetectionSpace" type="string" value="true"/>   <!-- Local loop closure detection (using estimated position) with locations in WM -->
	  <param name="RGBD/OptimizeFromGraphEnd"    type="string" value="false"/>  <!-- Set to false to generate map correction between /map and /odom -->
	  <param name="Kp/MaxDepth"                  type="string" value="5.0"/>
	  <param name="LccIcp/Type"                  type="string" value="2"/>      <!-- Loop closure transformation refining with ICP: 0=No ICP, 1=ICP 3D, 2=ICP 2D -->
	  <param name="LccIcp2/CorrespondenceRatio"  type="string" value="0.05"/>
	  <param name="LccBow/MinInliers"            type="string" value="10"/>      <!-- 3D visual words minimum inliers to accept loop closure -->
	  <param name="LccBow/InlierDistance"        type="string" value="0.1"/>    <!-- 3D visual words correspondence distance -->
	  <param name="RGBD/AngularUpdate"           type="string" value="0.1"/>    <!-- Update map only if the robot is moving -->
	  <param name="RGBD/LinearUpdate"            type="string" value="0.1"/>    <!-- Update map only if the robot is moving -->
	  <param name="Rtabmap/TimeThr"              type="string" value="700"/>
	  <param name="Mem/RehearsalSimilarity"      type="string" value="0.30"/>   
	  
	  <!-- localization mode -->
	  <param     if="$(arg localization)" name="Mem/IncrementalMemory" type="string" value="false"/>
	  <param unless="$(arg localization)" name="Mem/IncrementalMemory" type="string" value="true"/>
	  <param name="Mem/InitWMWithAllNodes" type="string" value="$(arg localization)"/> 
    </node>
  
     <node if="$(arg rtabmapviz)" pkg="rtabmap_ros" type="rtabmapviz" name="rtabmapviz" args="-d $(find rtabmap_ros)/launch/config/rgbd_gui.ini" output="screen">
      <param name="subscribe_depth"     type="bool"   value="true"/>
<!--      <param name="subscribe_odom_info" type="bool"   value="$(arg odom_info_data)"/>-->
      <param name="frame_id"            type="string" value="base_link"/>
      <param name="wait_for_transform"  type="bool"   value="true"/>
    
      <remap from="rgb/image"       to="/iris/xtion_sensor/iris/xtion_sensor_camera/rgb/image_raw"/>
      <remap from="depth/image"     to="/iris/xtion_sensor/iris/xtion_sensor_camera/depth/image_raw"/>
      <remap from="rgb/camera_info" to="/iris/xtion_sensor/iris/xtion_sensor_camera/rgb/camera_info"/>
    </node>
    
      <!-- Visualization RVIZ -->
  <node if="$(arg rviz)" pkg="rviz" type="rviz" name="rviz" args="-d $(find aircraft_inspection)/rviz/rgbd_gazebo.rviz"/>
  <!-- sync cloud with odometry and voxelize the point cloud (for fast visualization in rviz) -->
  <node if="$(arg rviz)" pkg="nodelet" type="nodelet" name="points_xyzrgb" args="load rtabmap_ros/point_cloud_xyzrgb standalone_nodelet">
    <remap from="rgb/image"       to="/iris/xtion_sensor/iris/xtion_sensor_camera/rgb/image_raw"/>
    <remap from="depth/image"     to="/iris/xtion_sensor/iris/xtion_sensor_camera/depth/image_raw"/>
    <remap from="rgb/camera_info" to="/iris/xtion_sensor/iris/xtion_sensor_camera/rgb/camera_info"/>
    <remap from="cloud"           to="voxel_cloud" />

    <param name="decimation" type="double" value="2"/>
    <param name="voxel_size" type="double" value="0.02"/>
  </node>
  </group>
 
</launch>
